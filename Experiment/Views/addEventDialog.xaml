<Window x:Class="Experiment.Views.addEventDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Experiment.Views"
        xmlns:res="clr-namespace:Experiment"
        xmlns:conv="clr-namespace:Experiment.Converters"
        xmlns:userControls="clr-namespace:Experiment.CustomControls"
        xmlns:ColorPicker="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Ajouter un évènement" Height="auto" Width="400"
        ResizeMode="NoResize"
        AllowsTransparency="True"
        WindowStyle="None"
        Background="Transparent"
        Closing="OnClosing"
        SizeToContent="Height"
        xml:lang="fr-FR"
        >
    <Window.Resources>
        <userControls:HourSelector x:Key="HourSelector"></userControls:HourSelector>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="#FF666666" />
            <Setter Property="FontSize" Value="17" />
        </Style>

        <Style TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="FontSize" Value="17" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="14"></Setter>
        </Style>

        <ObjectDataProvider 
            ObjectInstance="{x:Type Colors}" 
            MethodName="GetProperties" 
            x:Key="colorPropertiesOdp" 
        />
    </Window.Resources>
    <Border Background="White"  CornerRadius="10" BorderBrush="Gray" BorderThickness="0.8">
        <Border.Resources>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="#FF666666" />
            </Style>

            <Style TargetType="{x:Type RadioButton}" x:Key="buttonstripe1">
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <BulletDecorator Cursor="Hand">
                                <!--Text element-->
                                <Border x:Name="Switch" Width="60" Height="20" CornerRadius="3" BorderBrush="#FFE2E2E2" BorderThickness="1">
                                    <Grid>
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        <!--We don't need any bullet, cause our border is the switching element-->
                                        <!--<Border Margin="5,0,48,0" Background="#FFCDCDCD" CornerRadius="1" Name="RadioMark" />-->
                                        <!-- To change the apearance to button stripe 2, edit the margins! -->
                                    </Grid>

                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Color="#FFE2E2E2" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </BulletDecorator>

                            <!--If item is checked, trigger the visibility of the mark-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <!--<Setter TargetName="RadioMark" Property="Background" Value="Gold"/>-->
                                    <Setter TargetName="Switch" Property="Background" Value="#FFB9B9B9"></Setter>
                                    <Setter Property="TextElement.Foreground" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Border.Resources>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="35"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="70"></RowDefinition>
            </Grid.RowDefinitions>

            <Border
                x:Name="titleHeaderContainer" 
                CornerRadius="10,10,0,0" 
                Grid.Row="0" 
                BorderBrush="LightGray" 
                BorderThickness="0,0,0,.5"
                MouseLeftButtonDown="TitleHeaderContainer_MouseLeftButtonDown">

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Style="{StaticResource Header}" x:Name="startDateText"></TextBlock>
                </StackPanel>
            </Border>
            <TextBlock FontWeight="DemiBold" Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="1" Text="Liste des évènements du jour :"></TextBlock>
            <StackPanel Margin="0,0,10,0" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal">
                <RadioButton Width="60" Style="{StaticResource buttonstripe1}" x:Name="StandardModeBtn" GroupName="GraphicMode"  Margin="0,0,3,0" Content="Standard" ></RadioButton>
                <RadioButton Style="{StaticResource buttonstripe1}" x:Name="AdvancedModeBtn" GroupName="GraphicMode"  Content="Avancé" ></RadioButton>
            </StackPanel>

            <Border Grid.Row="2" BorderBrush="LightGray" >
                <DockPanel Margin="10,0,10,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <!--<DockPanel.Style>
                        
                    </DockPanel.Style>-->
                    <ListBox HorizontalAlignment="Stretch" 
                             Visibility="{Binding ElementName=StandardModeBtn, Path=IsChecked, Converter={StaticResource BooleanToVisibleConverter}}" 
                             SelectedItem="{Binding SelectedEvent, Mode=TwoWay}" 
                             x:Name="eventsList" 
                             Width="380"
                             BorderThickness=".2"
                             SelectionChanged="ListBox_SelectionChanged" 
                             ItemsSource="{Binding eventsFromStack}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Height="43">
                                    <DockPanel>
                                        <TextBlock DockPanel.Dock="Right" Margin="10,0,0,0" FontSize="17" FontWeight="Bold" Text="( Filtre )" Foreground="#FFECAD3E" Opacity="{Binding IsFilterResult, Converter={StaticResource InvertedOpacityToFullVisibilityConverter}}"/>
                                        <Border CornerRadius="4" Width="35" Height="35" DockPanel.Dock="Left" Background="{Binding ColorFill,Converter={StaticResource BrushToGradientConverter}}"></Border>
                                        <TextBlock DockPanel.Dock="Top" Margin="10,0,0,0" FontSize="17" FontWeight="Bold" Text="{Binding Name}"></TextBlock>
                                        <TextBlock FontSize="12" DockPanel.Dock="Bottom"  Margin="10,0,0,2">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="Début : {0}h{1}   Fin : {2}h{3}">
                                                    <Binding Path="ShowHour"></Binding>
                                                    <Binding Path="ShowMinutes"></Binding>
                                                    <Binding Path="ShowEndHour"></Binding>
                                                    <Binding Path="ShowEndMinutes"></Binding>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DockPanel>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Style.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="10" />
                                    </Style>
                                </Style.Resources>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFBFBFB" Offset="0"/>
                                            <GradientStop Color="#FFFBFBFB" Offset="1"/>
                                            <GradientStop Color="#FFF3F3F3" Offset="0.259"/>
                                            <GradientStop Color="#FFFDFDFD" Offset="0.1"/>
                                            <GradientStop Color="#FFF7F7F7" Offset="0.699"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" Value="#FFCCCCCC"></Setter>
                                <Setter Property="BorderThickness" Value="0.5"></Setter>
                                <Setter Property="Margin" Value="1,0,1,3"></Setter>

                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                    <userControls:DayScheduler
                        Visibility="{Binding ElementName=AdvancedModeBtn, Path=IsChecked, Converter={StaticResource BooleanToVisibleConverter}}" 
                        SelectedEventItem="{Binding SelectedEvent, Mode=TwoWay}" 
                        Width="380"
                        Height="400"
                        x:Name="ActualDayScheduler" />
                </DockPanel>
            </Border>
            <DockPanel Margin="10,0,10,0" Grid.Row="3" >
                <DockPanel.Style>
                    <Style TargetType="{x:Type DockPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=AdvancedModeBtn, Path=IsChecked}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
                <Button x:Name="greenAddBtn"
                        FontSize="15" 
                        HorizontalAlignment="Left" 
                        Width="78"
                        Height="26"
                        Click="BtnAddEvent_Click"
                        IsEnabled="{Binding ElementName=eventsList, Path=Items.Count, Converter={StaticResource CountToBoolConverter}}"
                        Style="{StaticResource AddGreenBtn}" 
                        Margin="0,1,5,1">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFA2EC91" Offset="0.099"/>
                            <GradientStop Color="#FF35A41D" Offset="0.51"/>
                            <GradientStop Color="#FF47B82E" Offset="0.887"/>
                            <GradientStop Color="#FFB2DEA8" Offset="0.01"/>
                            <GradientStop Color="#FF2C8119" Offset="0.983"/>
                        </LinearGradientBrush>
                    </Button.Background> Ajouter</Button>
                <Button x:Name="redDeleteBtn"
                        FontSize="15" 
                        HorizontalAlignment="Left" 
                        Width="78"
                        Height="26"
                        Visibility="{Binding ElementName=ActualDayScheduler, Path=SelectedEventItem, Converter={StaticResource SelectedItemToVisibilityConverter}}"
                        Click="RedDeleteBtn_Click"
                        Style="{StaticResource RemoveRedBtn}" 
                        Margin="0,1">Enlever</Button>
                <ListBox Height="26" 
                         Style="{StaticResource ListBoxEventsGraph}" 
                         SelectedItem="{Binding SelectedEvent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         BorderThickness="0" 
                         HorizontalAlignment="Right" 
                         ItemsSource="{Binding eventsFromStack}" 
                         Visibility="{Binding ElementName=AdvancedModeBtn, Path=IsChecked, Converter={StaticResource BooleanToVisibleConverter}}"
                         DockPanel.Dock="Right">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border CornerRadius="4" Background="White" Height="22" Width="60" BorderBrush="LightGray" BorderThickness=".4">
                                <DockPanel Margin="5,0,0,0">
                                    <Border Margin="0,0,4,0" DockPanel.Dock="Left" CornerRadius="2" Width="16" Height="16" Background="{Binding ColorFill, Converter={StaticResource BrushToGradientConverter}}">
                                    </Border>
                                    <TextBlock DockPanel.Dock="Right" Text="{Binding Name}" />
                                </DockPanel>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"></StackPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </DockPanel>
            <Border Grid.Row="4" >
                <!--<StackPanel Background="White" x:Name="InfosPanel" DataContext="{Binding ElementName=eventsList, Path=SelectedItem}" Visibility="{Binding ElementName=eventsList, Path=SelectedItem, Converter={StaticResource SelectedItemToVisibilityConverter}}" Margin="10,0">-->
                <StackPanel Background="White" x:Name="InfosPanel" DataContext="{Binding ElementName=eventsList, Path=SelectedItem}" Visibility="{Binding ElementName=eventsList, Path=SelectedItem, Converter={StaticResource SelectedItemToVisibilityConverter}}" Margin="0,0">
                    <DockPanel VerticalAlignment="Top" Height="30" Margin="10,10,10,10">
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                            <Label  FontWeight="DemiBold" Padding="0" Margin="0,3,0,0" Content="Titre : "/>
                            <TextBox x:Name="txtTitle" Text="{Binding Name, Mode=TwoWay}" HorizontalAlignment="Left" Width="160" FontSize="15" Height="24" MaxLines="1" ></TextBox>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right" HorizontalAlignment="Right"  Orientation="Horizontal">
                            <Label Padding="0" Margin="0,3,0,0" Content="Couleur : "></Label>
                            <ColorPicker:ColorPicker
                            x:Name="EventColorPicker"
                            SelectedColor="{Binding ColorFill, Converter={StaticResource ColorToSolidBrushColorConverter}}"
                            Width="60"
                            UsingAlphaChannel="False"
                            ShowStandardColors="False"
                            ShowRecentColors="True"
                            StandardColorsHeader="Couleurs Standard"
                            AdvancedButtonHeader="Mode Avancé"
                            AvailableColorsHeader="Couleurs par défaut"
                            RecentColorsHeader="Couleurs récentes"
                            StandardButtonHeader="Mode Standard"
                            ></ColorPicker:ColorPicker>
                            <!--<Button x:Name="btnPaint" Click="BtnPaint_Click" HorizontalAlignment="Right" Margin="0,0,5,0" Width="40" Height="30">
                            <Image>
                                <Image.Source>
                                    <BitmapImage UriSource="../Pictures/IconPaint.png"></BitmapImage>
                                </Image.Source>
                            </Image>
                        </Button>-->
                        </StackPanel>
                    </DockPanel>
                    <Border Background="#FFFCFDFF">
                        <DockPanel Height="160" Margin="0,0,0,5">
                            <DockPanel.Style>
                                <Style TargetType="{x:Type DockPanel}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=AdvancedModeBtn, Path=IsChecked}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                      
                            <StackPanel Height="145" Margin="10,0,0,10" DockPanel.Dock="Left">
                                <Label Padding="0,5,0,5" 
                                           HorizontalAlignment="Left" 
                                           Width="110" 
                                           Content="Début"></Label>
                                <userControls:HourSelector
                                    Height="75"
                                    HorizontalAlignment="Left"
                                    HourValue="{Binding ShowHour, Mode=TwoWay}"
                                    MinutesValue="{Binding ShowMinutes, Mode=TwoWay}"
                                    ></userControls:HourSelector>
                                <TextBlock Margin="0,8,0,0" FontWeight="DemiBold" Foreground="#FF909090" Text="{Binding Start, StringFormat={}{0:dd MMMM}}">

                                </TextBlock>
                            </StackPanel>
                            <StackPanel Height="145" Margin="0,0,10,10" DockPanel.Dock="Right">
                                <Label Padding="0,5,0,5" 
                                           x:Name="EndLabel"
                                           Content="" 
                                           HorizontalAlignment="Right"></Label>
                                <userControls:HourSelector
                                        x:Name="LengthOrEndHourControl"
                                        Height="75"
                                        HorizontalAlignment="Right"
                                        HourValue="{Binding ShowLengthHour, Mode=TwoWay}"
                                        MinutesValue="{Binding ShowLengthMinutes, Mode=TwoWay}"
                                        ></userControls:HourSelector>
                                <TextBlock Margin="0,8,0,0" FontWeight="DemiBold" Foreground="#FF909090" HorizontalAlignment="Right" Text="{Binding End, StringFormat={}{0:dd MMMM}}" />
                            </StackPanel>
                            <StackPanel Width="60" Height="60" VerticalAlignment="Center"  DockPanel.Dock="Right">
                                <RadioButton Style="{StaticResource buttonstripe1}" Checked="LengthSetting_Checked" GroupName="EndHourSetting" Content="Durée" Margin="0,0,0,10"></RadioButton>
                                <RadioButton Style="{StaticResource buttonstripe1}" Checked="EndHourSetting_Checked" GroupName="EndHourSetting"  IsChecked="True" Content="Fin"></RadioButton>
                            </StackPanel>
                      
                        </DockPanel>
                    </Border>
                    <DockPanel Margin="0,15,0,15">
                        <StackPanel Margin="10,0,0,0" DockPanel.Dock="Left"  Orientation="Horizontal">
                            <Label Width="120" Padding="0" Content="Employeur :"></Label>
                            <!--<TextBlock Text=""></TextBlock>-->
                            <!--<TextBox x:Name="txtEmployerName" Text="{Binding ActualEmployer.LastName, Mode=TwoWay}" Height="24" Width="120"></TextBox>-->
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Left"  Orientation="Horizontal">
                            <TextBlock x:Name="EmployerLabel"
                                       FontWeight="Bold"
                                       Foreground="#FF666666"
                                       VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat=" {0} {1} ">
                                        <Binding Path="ActualEmployer.FirstName"></Binding>
                                        <Binding Path="ActualEmployer.LastName"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <Button x:Name="DefineEmployerBtn" 
                                    Click="DefineEmployerBtn_Click" 
                                    Style="{StaticResource FlatBlueBtnStandard}" 
                                    FontSize="14" 
                                    Width="Auto"
                                    MinWidth="22"
                                    Height="18"
                                    Visibility="{Binding ElementName=EmployerLabel, Path=Text, Converter={StaticResource StringNullOrEmptyToVisibleConverter}}"
                                    Margin="0,0,5,0"
                                    Content="{Binding ActualEmployer, Converter={StaticResource DataToStringLabelConverter}, ConverterParameter='Définir'}">
                                <!--<Button.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF9DB3E2" Offset="0.095"/>
                                        <GradientStop Color="#FF204DB0" Offset="0.405"/>
                                        <GradientStop Color="#FF3B64BB" Offset="0.888"/>
                                        <GradientStop Color="#FF8CA6DE" Offset="0.01"/>
                                        <GradientStop Color="#FF1D3893" Offset="1"/>
                                    </LinearGradientBrush>
                                </Button.Background>-->
                            </Button>
                            <Button x:Name="RemoveEmployerBtn" 
                                    Click="RemoveEmployerBtn_Click"
                                    Style="{StaticResource FlatRedBtnStandard}"
                                    FontSize="18"
                                    Visibility="{Binding ActualEmployer, Converter={StaticResource SelectedItemToVisibilityConverter}}"
                                    Width="22"
                                    Height="18"
                                    FontWeight="Bold"
                            >
                                <TextBlock Margin="0,0,0,5" Foreground="White" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Button>
                            <!--Visibility="Collapsed"-->
                            <!--<Label Content="Tel :"></Label>
                            <TextBox x:Name="txtEmployerTel" Text="{Binding ActualEmployer.PhoneNumber, Mode=TwoWay}" Height="24" Width="120"></TextBox>-->
                        </StackPanel>
                    </DockPanel>
                    <DockPanel Margin="0,0,0,15">
                        <StackPanel Margin="10,0,0,0" Orientation="Horizontal">
                            <Label Width="120" Padding="0, 5" Content="Formule :" Margin="0,0,0,0"></Label>
                            <!--<TextBox x:Name="txtFormuleName" Text="{Binding CurrentFormule.Name, Mode=TwoWay}" Height="24" Width="120"></TextBox>-->
                            <ComboBox Height="30" SelectedItem="{Binding CurrentFormule, Mode=TwoWay}" x:Name="comboFormule" ItemsSource="{Binding Band.Formules}" Width="120">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock FontSize="16" Text="{Binding Name}"></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                        
                    </DockPanel>
                    <DockPanel Margin="0,0,0,10">
                        <StackPanel Margin="10,0,0,0" Orientation="Horizontal">
                            <Label Padding="0" Width="120" Margin="0,0,0,0" DockPanel.Dock="Left" Content="Lieu :"></Label>
                            <TextBlock x:Name="LocationLabel"
                                   FontWeight="Bold"
                                   Foreground="#FF666666"
                                   VerticalAlignment="Center"
                                   >
                                <TextBlock.Text>
                                    <MultiBinding StringFormat=" {0} ">
                                        <Binding Path="LocationName.TownName"></Binding>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <Button DockPanel.Dock="Left" x:Name="DefineLocationBtn" 
                                Click="DefineLocationBtn_Click" 
                                Style="{StaticResource FlatBlueBtnStandard}" 
                                FontSize="14" 
                                Width="auto" 
                                MinWidth="22"
                                Height="18"
                                Visibility="{Binding ElementName=LocationLabel, Path=Text, Converter={StaticResource StringNullOrEmptyToVisibleConverter}}"
                                Margin="0,0,5,0"
                                Content="{Binding LocationName, Converter={StaticResource DataToStringLabelConverter}, ConverterParameter='Définir'}">
                            </Button>
                            <Button HorizontalAlignment="Left" x:Name="RemoveLocationBtn" 
                                    Click="RemoveLocationBtn_Click"
                                    Style="{StaticResource FlatRedBtnStandard}"
                                    FontSize="18"
                                    Visibility="{Binding LocationName, Converter={StaticResource SelectedItemToVisibilityConverter}}"
                                    Width="22"
                                    Height="18"
                                    FontWeight="Bold"
                            >
                                <TextBlock Margin="0,0,0,5" Foreground="White" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Button>
                        </StackPanel>
                    </DockPanel>
                    <DockPanel Margin="10,0,0,0"
                               HorizontalAlignment="Left" Width="380">
                        <Label Padding="0,5,0,5" DockPanel.Dock="Top"  Content="Commentaires :">
                        </Label>
                        <RichTextBox Margin="0,0,0,0" DockPanel.Dock="Left" Width="280" x:Name="RichTxtComment" Height="70">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="{Binding Comment, Mode=TwoWay}"></Run>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <Button x:Name="DuplicateBtn" Style="{StaticResource FlatBlueBtnStandard}" DockPanel.Dock="Right" VerticalAlignment="Top" Width="80" Height="30" Content="Dupliquer" Click="DuplicateBtn_Click"></Button>
                    </DockPanel>
                </StackPanel>
            </Border>
            <TextBlock Margin="4,0,0,0" Panel.ZIndex="-5" Text="Vous pouvez ajouter ou séléctionner un évènement" Grid.Row="4" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
            <Border Height="60" Grid.Row="5" Grid.Column="1" x:Name="BtnAddConfirm" Visibility="Hidden">
                <DockPanel Margin="10,25,10,8" HorizontalAlignment="Stretch" LastChildFill="False">
                    <Button DockPanel.Dock="Left" Width="140" Margin="10,5,10,0" Height="40" Click="BtnAddConfirm_Click" Content="Valider et Créer"></Button>
                    <Button DockPanel.Dock="Right" Width="140" Margin="10,5,10,0" Height="40" Click="BtnCancelConfirm_Click" Content="Retour"></Button>
                </DockPanel>
            </Border>
            <Border x:Name="DefaultDialogBtns" Margin="0,0,0,5" Visibility="Visible" Grid.Row="6" BorderBrush="LightGray">
                <DockPanel VerticalAlignment="Bottom"  Margin="10,0,10,8" HorizontalAlignment="Stretch" LastChildFill="False">
                    <Button FontWeight="Bold" Style="{StaticResource FlatGrayBtnStandard}" DockPanel.Dock="Left" IsDefault="True" x:Name="btnAjouter" Click="BtnAjouter_Click" Content="Ok" Width="140" Height="40"/>
                    <Button FontWeight="Bold" Style="{StaticResource FlatGrayBtnStandard}" DockPanel.Dock="Right" IsCancel="True" x:Name="btnAnnuler" Click="BtnAnnuler_Click" Content="Annuler" Width="140" Height="40"></Button>
                </DockPanel>
            </Border>
        </Grid>
    </Border>
</Window>
