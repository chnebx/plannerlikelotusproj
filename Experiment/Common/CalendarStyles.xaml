<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:localConverters="clr-namespace:Experiment.Converters"
                    >

    <localConverters:BrushToGradientConverter x:Key="BrushToGradientConverter"/>
    <localConverters:SearchStringToHeaderColorConverter x:Key="SearchStringToHeaderColorConverter" />
    <localConverters:BoolToBorderThicknessConverter x:Key="BoolToBorderThicknessConverter"/>
    <localConverters:OpacityToFullVisibilityConverter x:Key="OpacityToFullVisibilityConverter"/>
    <localConverters:BrushToBrighterBrushConverter x:Key="BrushToBrighterBrushConverter" />
    <localConverters:WeColorConverter x:Key="WeColorConverter" />
    <localConverters:SelectedItemToVisibilityConverter x:Key="SelectedItemToVisibilityConverter"/>
    <localConverters:InvertedOpacityToFullVisibilityConverter x:Key="InvertedOpacityToFullVisibilityConverter"/>
    <localConverters:SearchStringToVisibleConverter x:Key="SearchStringToVisibleConverter"/>
    <localConverters:DataToStringLabelConverter x:Key="DataToStringLabelConverter"/>
    <localConverters:ColorToSolidBrushColorConverter x:Key="ColorToSolidBrushColorConverter" />
    <localConverters:SelectedEventToRadioButtonConverter x:Key="SelectedEventToRadioButtonConverter" />
    <localConverters:BooleanToVisibleConverter x:Key="BooleanToVisibleConverter" />
    <localConverters:StringNullOrEmptyToVisibleConverter x:Key="StringNullOrEmptyToVisibleConverter" />
    <localConverters:CountToBoolConverter x:Key="CountToBoolConverter"/>

    
    <!-- global -->

    <Style x:Key="PrevForwardBtn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Background" Value="#FF8484AA"></Setter>
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse
                                Width="{TemplateBinding Width}" 
                                Height="{TemplateBinding Height}" 
                                Fill="{TemplateBinding Background}"
                                >
                        </Ellipse>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}">
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SearchFilter Section -->

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#FFE1F3FB"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#A8C8E9F9"/>
    <!--<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DF9F5F5"/>-->
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#FFF9F5F5"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#FFD3F1FF"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FFC5EAFB"/>
    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border CornerRadius="10" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="resetFilterBtn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="DemiBold"></Setter>
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF8594D8" Offset="0"/>
                    <GradientStop Color="#FF7686C9" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="10,0,10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="8"
                                Width="{TemplateBinding Width}" 
                                Height="{TemplateBinding Height}" 
                                Background="{TemplateBinding Background}">
                        <DockPanel VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <ContentPresenter DockPanel.Dock="Left" Margin="0,0,5,4" VerticalAlignment="Center"  Content="{TemplateBinding Content}" HorizontalAlignment="Center">
                            </ContentPresenter>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorFilterHeaderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#FF8484AA"></Setter>
    </Style>
    <Style x:Key="FilterHeaderStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource ColorFilterHeaderStyle}">
        <Setter Property="Height" Value="18"></Setter>
        <Setter Property="Margin" Value="10,0,10,0"></Setter>
        <Setter Property="CornerRadius" Value="5,5,0,0"></Setter>

    </Style>
    <Style x:Key="FilterHeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="DemiBold"></Setter>
        <Setter Property="Margin" Value="10,0,0,0"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
    </Style>

    <Style x:Key="Header" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>

    <!-- Planner Section -->

    <Style x:Key="BorderMonth" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FF9A9DB9" Offset="0"/>
                    <GradientStop Color="#FF9A9EB9" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0,0,0.5"></Setter>
        <Setter Property="CornerRadius" Value="10,0,0,10"></Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
    </Style>

    <!-- Add Event Dialog -->

    <Style x:Key="AddGreenBtn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="DemiBold"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF95F081" Offset="0.1"/>
                    <GradientStop Color="#FF35A41D" Offset="0.51"/>
                    <GradientStop Color="#FF47B82E" Offset="0.887"/>
                    <GradientStop Color="#FF82E06C" Offset="0.01"/>
                    <GradientStop Color="#FF2C8119" Offset="0.983"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="8"
                                Name="greenBtnBorder"
                                Width="{TemplateBinding Width}" 
                                Height="{TemplateBinding Height}" 
                                Background="{TemplateBinding Background}">
                        <DockPanel VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <TextBlock DockPanel.Dock="Left" Text="+" Margin="4,0,0,6" FontWeight="Bold" FontSize="20" VerticalAlignment="Center"></TextBlock>
                            <ContentPresenter DockPanel.Dock="Left" Margin="0,0,5,4" VerticalAlignment="Center"  Content="{TemplateBinding Content}" HorizontalAlignment="Center">
                            </ContentPresenter>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" 
                                        TargetName="greenBtnBorder" 
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={StaticResource BrushToBrighterBrushConverter}}"
                                        >
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background"
                                        TargetName="greenBtnBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFA49E9D" Offset="0.137"/>
                                        <GradientStop Color="#FFB4B4B4" Offset="0.51"/>
                                        <GradientStop Color="#FFD6D5D5" Offset="0.88"/>
                                        <GradientStop Color="#FFBBBABA" Offset="0.01"/>
                                        <GradientStop Color="#FFC3C3C3" Offset="0.96"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemoveRedBtn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="DemiBold"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFF1856D" Offset="0.137"/>
                    <GradientStop Color="#FFBD4C32" Offset="0.485"/>
                    <GradientStop Color="#FFD84F26" Offset="0.883"/>
                    <GradientStop Color="#FFF16725" Offset="0.01"/>
                    <GradientStop Color="#FFA03819" Offset="0.96"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="8"
                                Name="redBtnBorder"
                                Width="{TemplateBinding Width}" 
                                Height="{TemplateBinding Height}" 
                                Background="{TemplateBinding Background}">
                        <DockPanel VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <TextBlock DockPanel.Dock="Left" Text="-" Margin="7,0,0,8" FontWeight="Bold" FontSize="22" VerticalAlignment="Center"></TextBlock>
                            <ContentPresenter DockPanel.Dock="Left" Margin="0,0,5,4" VerticalAlignment="Center"  Content="{TemplateBinding Content}" HorizontalAlignment="Center">
                            </ContentPresenter>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" 
                                        TargetName="redBtnBorder" 
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={StaticResource BrushToBrighterBrushConverter}}"
                                        >
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="ListBoxEventsGraph" TargetType="ListBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="Panel.Background">
            <Setter.Value>
                <DynamicResource ResourceKey="{x:Static SystemColors.WindowBrushKey}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
            <Setter.Value>
                <SolidColorBrush>#FF7F9DB9</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>1,1,1,1</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
            <Setter.Value>
                <x:Static Member="ScrollBarVisibility.Auto" />
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility">
            <Setter.Value>
                <x:Static Member="ScrollBarVisibility.Auto" />
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll">
            <Setter.Value>
                <s:Boolean>True</s:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <x:Static Member="VerticalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Name="Bd" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True" Padding="0">
                        <ScrollViewer Focusable="False" Padding="{TemplateBinding Control.Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="Panel.Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping">
                            <Setter Property="ScrollViewer.CanContentScroll">
                                <Setter.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GraphEventBtn" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="White" Height="22" Width="60" BorderBrush="LightGray" BorderThickness=".4">
                        <StackPanel Orientation="Horizontal">
                            <Border Margin="2,0,5,0" CornerRadius="2" Width="16" Height="16" Background="{TemplateBinding Background}"></Border>
                            <ContentPresenter HorizontalAlignment="Right" Margin="0,0,0,3" VerticalAlignment="Center" Content="{TemplateBinding Content}">
                            </ContentPresenter>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GraphEventRadioBtn" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border CornerRadius="4" Background="White" Height="22" Width="60" BorderBrush="LightGray" BorderThickness=".4">
                        <StackPanel Orientation="Horizontal">
                            <Border Margin="2,0,5,0" CornerRadius="2" Width="16" Height="16" Background="{TemplateBinding Background}"></Border>
                            <ContentPresenter HorizontalAlignment="Right" Margin="0,0,0,3" VerticalAlignment="Center" Content="{TemplateBinding Content}">
                            </ContentPresenter>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>